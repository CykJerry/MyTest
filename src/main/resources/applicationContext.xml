<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--   1.加载jdbc.properties数据源-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
<!--   2.配置数据源对象 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
<!--   3.配置jdbc模板对象 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
<!--   配置RoleService -->
    <bean id="roleService" class="com.itheima.service.Impl.RoleServiceImpl">
        <property name="roleDao" ref="roleDao"/>
    </bean>
<!--   配置roleDao -->
    <bean id="roleDao" class="com.itheima.dao.Impl.RoleDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
<!--   配置userService -->
    <bean id="userService" class="com.itheima.service.Impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="roleDao" ref="roleDao"/>
    </bean>
<!--   配置userDao -->
    <bean id="userDao" class="com.itheima.dao.Impl.UserDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

<!--  AOPdemo  -->
<!--  目标对象  -->
    <bean id="target" class="com.itheima.aop.Target"></bean>
<!--  切面对象  -->
    <bean id="myAspect" class="com.itheima.aop.MyAspect"></bean>
<!--  配置织入：告诉spring框架 哪些方法（切点）需要进行哪些增强（前置，后置...）  -->
    <aop:config>
<!--     声明切面   -->
        <aop:aspect ref="myAspect">
            <aop:pointcut id="myPointcut" expression="execution(* com.itheima.aop.*.*(..))"/>
<!--     切面：切点+通知       -->
<!--            <aop:before method="before" pointcut="execution(public void com.itheima.aop.Target.save())"></aop:before>-->
<!--            <aop:around method="around" pointcut="execution(* com.itheima.aop.*.*(..))"/>-->
<!--            <aop:after method="after" pointcut="execution(* com.itheima.aop.*.*(..))"/>-->
<!--            <aop:after-throwing method="afterThrow" pointcut="execution(* com.itheima.aop.*.*(..))"/>-->
            <aop:around method="around" pointcut-ref="myPointcut"/>
        </aop:aspect>
    </aop:config>
</beans>